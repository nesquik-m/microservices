### Регистрация пользователя

POST {{base-url}}/api/v1/auth/register
Content-Type: application/json

{
  "email": "user12@gmail.com",
  "password": "12345",
  "firstName": "User",
  "lastName": "User"
}

### Регистрация администратора

POST {{base-url}}/api/v1/auth/register
Content-Type: application/json

{
  "email": "admin@gmail.com",
  "password": "12345",
  "firstName": "Admin",
  "lastName": "Admin"
}

### Авторизация пользователя

POST {{base-url}}/api/v1/auth/login
Content-Type: application/json

{
  "email": "user2@gmail.com",
  "password": "12345"
}

> {%
    if (response.status === 200) {
        const requestBody = JSON.parse(request.body());
        console.log("[user] Запрос выполнен для email: " + requestBody.email);

        client.global.set("token", response.body.accessToken);
        client.global.set("refresh-token", response.body.refreshToken);

        console.log("Глобальные переменные успешно сохранены.");
    } else {
        console.log("Ошибка авторизации. Статус:", response.status);
        console.log(response.body)
    }
%}

### Авторизация администратора

POST {{base-url}}/api/v1/auth/login
Content-Type: application/json

{
  "email": "admin@gmail.com",
  "password": "12345"
}

> {%
    if (response.status === 200) {
        const requestBody = JSON.parse(request.body());
        console.log("[user] Запрос выполнен для email: " + requestBody.email);

        client.global.set("token", response.body.accessToken);
        client.global.set("refresh-token", response.body.refreshToken);

        console.log("Глобальные переменные успешно сохранены.");
    } else {
        console.log("Ошибка авторизации. Статус:", response.status);
        console.log(response.body)
    }
%}

### Рефреш токена

POST {{base-url}}/api/v1/auth/refresh
Content-Type: application/json

{
  "refreshToken": "{{refresh-token}}"
}

> {%
    if (response.status === 200) {
        client.global.set("token", response.body.accessToken);
        client.global.set("refresh-token", response.body.refreshToken);
        console.log("Глобальные переменные успешно сохранены.");
    } else {
        console.log("Ошибка авторизации. Статус:", response.status);
        console.log(response.body)
    }
%}

### Валидация токена

POST {{base-url}}/api/v1/auth/validate
Content-Type: application/x-www-form-urlencoded
Authorization: Bearer {{token}}

# ========================[ACCOUNT]==================================================

### Получить инфо о текущем аккаунте

GET http://localhost:8083/api/v1/account/me
Authorization: Bearer {{token}}

### Получить аккаунт по id

@id = 790e4719-9b2c-49e3-85e8-f45cd8c1c9eb
GET http://localhost:8083/api/v1/account/{{id}}
Authorization: Bearer {{token}}

### Обновление аккаунта

PUT http://localhost:8083/api/v1/account/me
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "firstName": "Иван",
  "lastName": "Иванов",
  "phone": 9998887755,
  "city": "Москва",
  "country": "Россия",
  "birthDate": null,
  "about": "Обо мне!"
}

### Пагинированный список аккаунтов

GET http://localhost:8083/api/v1/account/accounts?
    offset=0&
    limit=5
Content-Type: application/json
Authorization: Bearer {{token}}

### Пагинированный список ids аккаунтов

GET http://localhost:8083/api/v1/account/ids?
    offset=0&
    limit=10
Content-Type: application/json
Authorization: Bearer {{token}}

### Поиск аккаунтов по фильтру - 1

GET http://localhost:8083//api/v1/account/filter?
    ids=4a499b8d-5dde-4363-ba2e-12ffff0ef08f&
    firstName=иван&
    lastName=иванов&
    city=Москва&
    country=Россия&
    ageFrom=30&
    ageTo=40&
    offset=0&
    limit=10
Content-Type: application/json
Authorization: Bearer {{token}}

### Поиск аккаунтов по фильтру - 2

GET http://localhost:8083//api/v1/account/filter?
    ids=4a499b8d-5dde-4363-ba2e-12ffff0ef08f&
    ids=e086deb9-b18e-489b-bcfb-aa6541cc6fb5&
    offset=0&
    limit=10
Content-Type: application/json
Authorization: Bearer {{token}}

### Поиск аккаунтов по фильтру - 3

GET http://localhost:8083//api/v1/account/filter?
    firstName=useR&
    offset=0&
    limit=10
Content-Type: application/json
Authorization: Bearer {{token}}